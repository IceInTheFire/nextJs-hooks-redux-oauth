{"ast":null,"code":"import _message from \"antd/lib/message\";\nimport React from \"react\";\nimport { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport { regExp } from \"../../../config\";\nconst {\n  phoneReg,\n  userNameReg,\n  userPasReg,\n  qqReg,\n  initCodeReg\n} = regExp;\nimport Valid from \"../../../components/Valid\";\nimport 'antd/lib/message/style/index.less';\n\nconst UserBox = props => {\n  const firstRef = useRef(null);\n  const rightRef = useRef(null);\n  const secondRef = useRef(null);\n  const successRef = useRef(null);\n  const phoneRef = useRef();\n  const codeRef = useRef();\n  const userNameRef = useRef();\n  const userPasRef = useRef();\n  const userQqRef = useRef();\n  const userInvitCodeRef = useRef();\n  const [step, setStep] = useState(1);\n  const [openEye, setOpenEye] = useState(false);\n\n  const onClickEye = () => {\n    setOpenEye(!openEye);\n  };\n\n  const firstStepClick = () => {\n    let phoneBool = phoneRef.current.check();\n    let codeBool = codeRef.current.check();\n\n    if (!phoneBool || !codeBool) {\n      return;\n    }\n\n    let phone = phoneRef.current.getVal();\n    let code = codeRef.current.getVal();\n    console.log(phone);\n    console.log(code);\n    firstRef.current.style.display = \"none\";\n    secondRef.current.style.display = \"block\";\n    setStep(step + 1);\n  }; // useEffect(()=>{\n  //     firstRef.current.style.display = \"none\";\n  //     secondRef.current.style.display = \"block\";\n  //     setStep( step+1 );\n  // } , []);    //空数组就是只执行一次\n\n\n  const secondSubmit = () => {\n    let userNameBool = userNameRef.current.check();\n    let userPasBool = userPasRef.current.check();\n    let userQqBool = userQqRef.current.check();\n    let userInvitCodeBool = userInvitCodeRef.current.check();\n\n    if (!userNameBool || !userPasBool || !userQqBool || !userInvitCodeBool) {\n      return;\n    }\n\n    let userName = userNameRef.current.getVal();\n    let userPas = userPasRef.current.getVal();\n    let userQq = userQqRef.current.getVal();\n    let userInvitCode = userInvitCodeRef.current.getVal();\n\n    _message.warn('暂未开放注册功能，敬请期待');\n\n    return;\n    rightRef.current.style.display = \"none\";\n    successRef.current.style.display = \"block\";\n    setStep(step + 1);\n  };\n\n  return React.createElement(\"div\", {\n    className: 'content'\n  }, React.createElement(\"div\", {\n    ref: rightRef\n  }, React.createElement(\"div\", {\n    className: 'left'\n  }, React.createElement(\"img\", {\n    src: \"/static/img/regist-user.png\"\n  })), React.createElement(\"div\", {\n    className: 'right'\n  }, React.createElement(\"div\", {\n    className: 'step'\n  }, React.createElement(\"p\", {\n    className: 'act'\n  }, React.createElement(\"span\", null, \" 1 \"), React.createElement(\"span\", null, \"\\u9A8C\\u8BC1\\u624B\\u673A\\u53F7\")), React.createElement(\"div\", {\n    className: 'step-arrow'\n  }), React.createElement(\"p\", {\n    className: step >= 2 ? 'act' : ''\n  }, React.createElement(\"span\", null, \" 2 \"), React.createElement(\"span\", null, \"\\u586B\\u5199\\u8D26\\u53F7\\u4FE1\\u606F\")), React.createElement(\"div\", {\n    className: 'step-arrow'\n  }), React.createElement(\"p\", {\n    className: step >= 3 ? 'act' : ''\n  }, React.createElement(\"span\", null, \" 3 \"), React.createElement(\"span\", null, \"\\u6CE8\\u518C\\u6210\\u529F\"))), React.createElement(\"div\", {\n    ref: firstRef\n  }, React.createElement(Valid, {\n    className: 'regist-input',\n    spanClass: 'regist-input-86',\n    spanTitle: '+86',\n    inputStyle: {\n      'width': '321px'\n    },\n    inputPlaceholder: '建议使用常用手机号',\n    inputType: 'text',\n    regExp: phoneReg,\n    nullMsg: '请填写手机号码',\n    errorMsg: '请正确输入手机号码',\n    ref: phoneRef,\n    onEnter: firstStepClick\n  }), React.createElement(Valid, {\n    className: 'regist-input',\n    spanTitle: '手机验证码',\n    inputStyle: {\n      'width': '153px'\n    },\n    inputPlaceholder: '输入验证码',\n    inputType: 'text',\n    nullMsg: '请填写手机验证码',\n    ref: codeRef,\n    onEnter: firstStepClick\n  }, React.createElement(\"span\", {\n    className: 'regist-input-btn',\n    onClick: () => {\n      _message.warning('目前没有验证码，请随便输');\n    }\n  }, \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\")), React.createElement(\"div\", {\n    className: 'regist-btn',\n    onClick: firstStepClick\n  }, \"\\u4E0B\\u4E00\\u6B65\")), React.createElement(\"div\", {\n    className: 'hide',\n    ref: secondRef\n  }, React.createElement(Valid, {\n    className: 'regist-input',\n    spanTitle: '用户名',\n    inputMaxLength: \"15\",\n    inputPlaceholder: '请设置用户名',\n    inputType: 'text',\n    regExp: userNameReg,\n    nullMsg: '请填写用户名',\n    errorMsg: '3-15位，支持汉字、数字、字母、下划线组合，不能为纯数字！',\n    ref: userNameRef,\n    onEnter: secondSubmit\n  }), React.createElement(Valid, {\n    className: 'regist-input',\n    spanTitle: '设置密码',\n    inputMaxLength: \"16\",\n    inputPlaceholder: '请设置密码',\n    inputType: openEye ? 'text' : 'password',\n    regExp: userPasReg,\n    nullMsg: '请填写密码',\n    errorMsg: '请填写6到16位字符！',\n    ref: userPasRef,\n    onEnter: secondSubmit\n  }, React.createElement(\"div\", {\n    className: 'iconfont ' + (openEye ? 'icon-zhengyan' : 'icon-biyan'),\n    onClick: onClickEye\n  })), React.createElement(Valid, {\n    className: 'regist-input',\n    spanClass: 'regist-input-span',\n    spanTitle: 'QQ',\n    inputPlaceholder: '请输入QQ',\n    inputType: 'text',\n    regExp: qqReg,\n    nullMsg: '请输入您的QQ',\n    errorMsg: '请正确输入QQ！',\n    ref: userQqRef,\n    onEnter: secondSubmit\n  }), React.createElement(Valid, {\n    className: 'regist-input',\n    spanClass: 'regist-input-span',\n    spanTitle: '邀请码',\n    inputPlaceholder: '请输入邀请码',\n    inputType: 'text',\n    regExp: initCodeReg,\n    nullMsg: '请输入邀请码',\n    errorMsg: '请正确输入邀请码！',\n    ref: userInvitCodeRef,\n    onEnter: secondSubmit\n  }), React.createElement(\"div\", {\n    className: 'regist-btn',\n    onClick: secondSubmit\n  }, \"\\u63D0\\u4EA4\")))), React.createElement(\"div\", {\n    className: 'success hide',\n    ref: successRef\n  }, React.createElement(\"i\", {\n    className: 'iconfont icon-tick'\n  }), React.createElement(\"p\", null, \"\\u606D\\u559C\\u60A8\\u6210\\u529F\\u6CE8\\u518C\\u4E3A\\u63D0\\u83AB\\u6DD8\\u5BA2\\u7528\\u6237~\")));\n};\n\nexport default UserBox;","map":null,"metadata":{},"sourceType":"module"}