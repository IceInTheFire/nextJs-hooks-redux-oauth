{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React from \"react\";\n// data.js\nimport Cookies from 'js-cookie';\nimport { createContext, useReducer } from \"react\"; // 创建 context\n\nexport const DataContext = createContext({}); // 定义 参数\n// let state = {\n//     id: 1234,\n//     token: Cookies.get('token') || '',\n//     user: Cookies.get('user') ? JSON.parse(Cookies.get('user')) : '',\n//     bis: Cookies.get('bis') ? JSON.parse(Cookies.get('bis')) : '',\n//     loading: false,\n// };\n\nconst initState = cookies => {\n  let state = {\n    id: 1234,\n    token: '',\n    user: '',\n    bis: '',\n    loading: false\n  };\n  cookies.token && (state.token = cookies.token);\n  cookies.user && (state.user = JSON.parse(cookies.user));\n  cookies.bis && (state.bis = JSON.parse(cookies.bis));\n  return state;\n}; // reducer\n\n\nexport const UPDATE_ID = \"UPDATE_ID\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const INIT_COOKIES = \"INIT_COOKIES\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_ID:\n      state.id += _parseInt(action.id) || 1;\n      return _objectSpread({}, state);\n      break;\n\n    case LOGIN:\n      state.token = action.token;\n      state.user = action.user || '';\n      state.bis = action.bis || '';\n      Cookies.set('token', action.token, {\n        expires: 7\n      }); // 失效时间7天\n\n      !action.user ? Cookies.remove('user', {\n        path: ''\n      }) : Cookies.set('user', _JSON$stringify(action.user), {\n        expires: 7\n      }); // 对整个站点有效\n\n      !action.bis ? Cookies.remove('bis', {\n        path: ''\n      }) : Cookies.set('bis', _JSON$stringify(action.bis), {\n        expires: 7\n      }); //对当前路径有效\n\n      return _objectSpread({}, state);\n      break;\n\n    case LOGOUT:\n      state.token = '';\n      state.user = '';\n      state.bis = '';\n      Cookies.remove('token', {\n        path: ''\n      }); // fail!\n\n      Cookies.remove('user', {\n        path: ''\n      }); // removed!\n\n      Cookies.remove('bis', {\n        path: ''\n      }); // removed!\n\n      return _objectSpread({}, state);\n      break;\n\n    case INIT_COOKIES:\n      if (action.cookies) {\n        let objArr = _Object$keys(action.cookies);\n\n        objArr.forEach((value, indx) => {\n          Cookies.set(value, action.cookies[value], {\n            expires: 7\n          });\n        });\n      }\n\n      return;\n      break;\n\n    default:\n      return state;\n  }\n};\n/**\r\n * 创建一个 Data 组件\r\n * Data 组件包裹的所有子组件都可以通过调用 DataContext 访问到 value\r\n */\n\n\nexport const Data = props => {\n  const [data, dispatch] = useReducer(reducer, initState(props.cookies));\n  return React.createElement(DataContext.Provider, {\n    value: {\n      data,\n      dispatch\n    }\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"module"}