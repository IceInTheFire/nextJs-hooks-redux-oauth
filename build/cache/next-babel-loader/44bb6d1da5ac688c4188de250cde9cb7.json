{"ast":null,"code":"import React from \"react\";\nimport { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport \"./less/index.less\";\n\nconst valid = (props, ref) => {\n  let {\n    className,\n    spanClass,\n    spanStyle,\n    spanTitle,\n    inputStyle,\n    inputPlaceholder,\n    inputType,\n    inputMaxLength,\n    regExp,\n    nullMsg,\n    errorMsg,\n    onEnter\n  } = props;\n  regExp = regExp || /\\*?/;\n  const [val, setVal] = useState('');\n  const [valMsg, setValMsg] = useState('');\n\n  const onChange = e => {\n    setVal(e.target.value);\n  };\n\n  const check = e => {\n    if (!val) {\n      setValMsg(nullMsg);\n      return false;\n    } else if (!regExp.test(val)) {\n      setValMsg(errorMsg);\n      return false;\n    } else {\n      setValMsg(null);\n      return true;\n    }\n  };\n  /*\r\n  * 暴露给父组件使用的方法和参数\r\n  * */\n\n\n  useImperativeHandle(ref, () => ({\n    getVal() {\n      return val;\n    },\n\n    check\n  }));\n\n  const onBlur = e => {\n    check();\n  };\n\n  const onKeyDown = e => {\n    if (e.nativeEvent.keyCode == 13) {\n      onEnter();\n    }\n  };\n\n  let inputDom;\n\n  if (inputMaxLength) {\n    inputDom = React.createElement(\"input\", {\n      className: valMsg ? 'Validform_error' : '',\n      style: {\n        'width': '321px'\n      },\n      style: inputStyle,\n      type: inputType,\n      placeholder: inputPlaceholder,\n      onBlur: onBlur,\n      onChange: onChange,\n      value: val,\n      maxLength: inputMaxLength,\n      onKeyDown: onKeyDown\n    });\n  } else {\n    inputDom = React.createElement(\"input\", {\n      className: valMsg ? 'Validform_error' : '',\n      style: {\n        'width': '321px'\n      },\n      style: inputStyle,\n      type: inputType,\n      placeholder: inputPlaceholder,\n      onBlur: onBlur,\n      onChange: onChange,\n      value: val,\n      onKeyDown: onKeyDown\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: className,\n    ref: ref\n  }, React.createElement(\"span\", {\n    className: spanClass,\n    style: spanStyle\n  }, spanTitle), inputDom, props.children, React.createElement(\"span\", {\n    className: valMsg ? 'Validform_wrong' : valMsg == null ? 'Validform_right' : ''\n  }, valMsg));\n};\n\nexport default forwardRef(valid);","map":null,"metadata":{},"sourceType":"module"}