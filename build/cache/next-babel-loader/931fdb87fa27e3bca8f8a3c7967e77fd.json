{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext } from 'react';\nimport Router from 'next/router';\nimport nextCookie from \"next-cookies\";\nexport const withAuthSync = ({\n  WrappedComponent,\n  type\n}) => {\n  const Wrapper = props => {\n    return __jsx(WrappedComponent, props);\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const cookies = nextCookie(ctx);\n\n    if (type == 'bis' && (!cookies.token || !cookies.bis)) {\n      // 当type为bis时\n      let url = '/login?type=bis';\n\n      if (ctx.res) {\n        ctx.res.response.redirect(url);\n      } else {\n        Router.replace(url);\n      }\n\n      return {};\n    } else if (type == 'user' && (!cookies.token || !cookies.user)) {\n      // 当type为user时\n      let url = '/login?type=user';\n\n      if (ctx.res) {\n        ctx.res.response.redirect(url);\n      } else {\n        Router.replace(url);\n      }\n\n      return {};\n    }\n\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps);\n  };\n\n  return Wrapper;\n};\nexport const bisAuthSync = WrappedComponent => {\n  return withAuthSync({\n    WrappedComponent,\n    type: 'bis'\n  });\n};\nexport const userAuthSync = WrappedComponent => {\n  return withAuthSync({\n    WrappedComponent,\n    type: 'user'\n  });\n};","map":null,"metadata":{},"sourceType":"module"}